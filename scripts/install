#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	ynh_clean_check_starting
}

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url="/"
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=1

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=known_shares --value=$known_shares

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=23

ynh_install_nodejs --nodejs_version=$NODEJS_VERSION
ynh_use_nodejs

ynh_npm install -g npm@9.6.0

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=2

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC SETUP
#=================================================
# INSTALL EARTHSTAR
#=================================================
ynh_script_progression --message="Install Earthstar with npm ci..." --weight=1

ynh_script_progression --message="Copying config files..." --weight=2

ynh_add_config --template="../conf/known_shares.json" --destination="$install_dir/known_shares.json"
ynh_add_config --template="../conf/npm-shrinkwrap.json" --destination="$install_dir/npm-shrinkwrap.json"
ynh_add_config --template="../conf/package.json" --destination="$install_dir/package.json"

ynh_script_progression --message="Setting permission for root/.npm..." --weight=2

sudo chown -R 997:997 /root/.npm
# sudo chown -R 997:997 /root/.cache

ynh_script_progression --message="Install better-sqlite3" --weight=2

ynh_npm cache verify

ynh_npm install -g better-sqlite3

ynh_script_progression --message="Starting npm ci..." --weight=2

pushd $install_dir
	ynh_npm ci
popd

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding server script..." --weight=2

ynh_print_info --message="Configured known_shares as $known_shares"

ynh_add_config --template="../conf/server.js" --destination="$install_dir/server.js"

chmod 400 "$install_dir/server.js"
chown $app:$app "$install_dir/server.js"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..." --weight=3

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Configuring log rotation..." --weight=1

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1

yunohost service add $app --description="Earthstar run a server as service" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"

# #=================================================
# # SETUP SSOWAT
# #=================================================
# ynh_script_progression --message="Configuring permissions..." --weight=2

# # Make app public if necessary
# if [ $is_public -eq 1 ]
# then
# 	# Everyone can access the app.
# 	# The "main" permission is automatically created before the install script.
# 	ynh_permission_update --permission="main" --add="visitors"
# fi

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last